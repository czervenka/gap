#!/bin/zsh
# set -x
ROOT_PATH="$(cd `dirname $0`/.. && pwd)"

VENV_DIR="$ROOT_PATH/tmp/.gap-test-venv"

_mk_virt() {
    virtualenv -q "$VENV_DIR"
}

_rm_virt() {
    rm -rf "$VENV_DIR"
}

_get_version() {
    python "$ROOT_PATH/gap/__init__.py"
}

_mk_sdist() {
    cd "$ROOT_PATH"
    ./setup.py -q sdist || (_err "Building failed."; exit 255;)
    echo "$ROOT_PATH/dist/gap-`_get_version`.tar.gz"
}

_check_sdist() {
    dist=`_mk_sdist`
    [ -f "$dist" ] || (_err "Source distribution building failed ($sdist)."; exit 255;)
    _mk_virt
    cd "$ROOT_PATH/tmp"
    pip install --force-reinstall -q $dist
    _rm_virt
    _info "Local source distribution installation succeded."
}

_check_pypi_pkg() {
    _mk_virt
    pip install -q 'gap=='`_get_version`
    _rm_virt
    _info "Pip package `_get_version` installation passed."
}

_git_tag() {
    git tag `_get_version`
}

_err() {
    echo -e "\033[31mE: \033[0m$@"
}

_info() {
    echo -e "\033[34mI: \033[0m$@"
}

_err_trap() {
    LINE_NO="$1"
    MESSAGE="$2"
    CODE="$3"
    _err "Error at or near $LINE_NO with message: $MESSAGE"
    _rm_virt
    exit "$CODE"
}

_main() {
    if $ROOT_PATH/setup.py -q test; then
        _info "Gap python tests succeded."
    else
        _err "Gap tests failed."
        exit 255
    fi
    if ! _check_sdist; then
        _err "Failed to build and install source distribution locally."
        exit 255
    fi

    if [ "$1" != "proof" ]; then
        cd "$ROOT_PATH"
        ./setup.py -q sdist upload || (_err "Failed to build and upload version `_get_version`."; exit 255;)
        _git_tag
        _info "Gap-`_get_version` installed on pip."
    else:
        _info "SKIPPING: Gap-`_get_version` installation on pip."
    fi
    if ! _check_pypi_pkg; then
        _err "Could not install version `_get_version` from pip server."
        exit 255
    fi

    [ "$1" = "proof" ] && echo -en "\e[31m!!! PROOF !!!\e[0m"
    echo "\e[34mOK\e[0m! (pip installed gap version = $gapver)"
}


trap '_err_trap ${LINENO}' ERR

_main "$@"
